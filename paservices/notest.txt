to create the maven project
mvn archetype:generate -DgroupId=com.pythonarabia -DartifactId=paservices -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false

adjusted the pom file > clean > validate


== Postgres from Docker and connecting the microservice to ==
create docker-compose.yml file and from the same path run the command
>> docker compose up -d
This will create pgadmin and postgres instance
docker compose ps
will show the instances status
pgadmin             pgadmin             running             443/tcp, 0.0.0.0:5050->80/tcp
postgres            postgres            running             0.0.0.0:5432->5432/tcp
open pgadmin from the browser
http://localhost:5050/browser/
add new server
Host postgres
Now the two docker instances are up and the pgadmin see the postgres and control it
add the data jpa and postgres driver dependancies  at the ms pom then reload
=============


== Fraud Application ==
configure different port at resources application.yml

Connect the customer microservice to the postgres
some configuration need to be pasted at the application.yml of the micro service
create new db from the same up and running docker file
configure fraud application.yml DB section
configure the pom file for jpa and postgre
========================



== Eureka ==
Now we have customer micro service and fraud micro service
both need to talk to each others in such case classes are not shared since it is two seperate
modules and the only interface available is the APIs url
Eureka has two things
client installed at each ms and server where all the clients register at, and from that
server the ms get to know and reach each others
>>Install
copy the depenancy of the correct version from the website
paste it at the main pom dependancy management section
Eureka server setup
create totally new module name it eureka-server
at the new modile pom add the following dependancy
<dependencies>
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
    </dependency>
</dependencies>
create new package com.pythonarabia.eurekaserver
create applicaiton class and configure it
annotate the application class by @EnableEurekaServer
add application.yml
at yml the fetch and register are false as this is the server itself
check the dashboard
http://127.0.0.1:8761/




































